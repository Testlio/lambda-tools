{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "Example microservice",
        "description": "A minimal example of a Lambda backed microservice",
        "contact": {
            "name": "Testlio Dev Team"
        },
        "license": {
            "name": "ISC"
        }
    },
    "schemes": [ "https" ],
    "consumes": [ "application/json" ],
    "produces": [ "application/json" ],
    "paths": {
        "/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Greetings said",
                        "schema": {
                            "$ref": "#/definitions/String"
                        }
                    }
                },
                "parameters": [
                    {
                        "$ref": "#/parameters/AuthorizationHeader"
                    }
                ],
                "x-amazon-apigateway-auth": {
                    "type": "none"
                },
                "x-amazon-apigateway-integration": {
                    "type": "aws",
                    "uri": "$lEndpoint",
                    "credentials": "$IamRoleArnApiGateway",
                    "httpMethod": "POST",
                    "requestParameters": {
                        "integration.request.header.x-oauth": "method.request.header.Authorization"
                    },
                    "requestTemplates": {
                        "application/json": "{\"authorization\": \"$input.params('Authorization')\", \"path\": \"$context.resourcePath\"}"
                    },
                    "responses": {
                        "default": {
                            "statusCode": "200",
                            "responseTemplates": {
                                "application/json": ""
                            }
                        }
                    }
                }
            }
        }
    },
    "parameters": {
        "AuthorizationHeader": {
            "name": "Authorization",
            "in": "header",
            "description": "Authorization header",
            "required": true,
            "type": "string"
        }
    }
    "definitions": {
        "String": {
            "type": "string"
        }
    }
}
